name: Build
on:
  workflow_call:
  workflow_dispatch:
jobs:
  build-full:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose
  build-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install wrangler
      - uses: Swatinem/rust-cache@v2
      - run: npx wrangler deploy --dry-run
  build-docker-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          tags: ghcr.io/cbackas/hookbuffer:dev-amd64
          platforms: linux/amd64
          outputs: push-by-digest=true,type=image,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: output digest
        run: echo "digest=${{ steps.docker_build.outputs.digest }}" >> "$GITHUB_ENV"
  build-docker-arm64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        id: docker_build
        with:
          tags: ghcr.io/cbackas/hookbuffer:latest-arm64
          platforms: linux/arm64
          outputs: push-by-digest=true,type=image,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: output digest
        run: echo "digest=${{ steps.docker_build.outputs.digest }}" >> "$GITHUB_ENV"
  test-download:
    runs-on: ubuntu-latest
    needs: [build-docker-amd64, build-docker-arm64]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Manifest List
        run: |
          docker manifest create ghcr.io/cbackas/hookbuffer:latest \
            --amend ghcr.io/cbackas/hookbuffer@${{ needs.build-docker-amd64.outputs.digest }} \
            --amend ghcr.io/cbackas/hookbuffer@${{ needs.build-docker-arm64.outputs.digest }}

      - name: Push Combined Manifest
        run: docker manifest push ghcr.io/cbackas/hookbuffer:pr-testing

