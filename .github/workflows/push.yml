name: Automated Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build:
    uses: ./.github/workflows/build.yml
  release-please:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: rust
      - name: Set release flag
        if: steps.release.outcome == 'success'
        run: echo "release_created=true" >> "$GITHUB_OUTPUT"
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
  docker-publish:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: cbackas/hookbuffer:latest
  deploy-worker:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm install wrangler
      - run: npx wrangler deploy
  # notify:
  #   runs-on: ubuntu-latest
  #   needs: release-please
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Discord notification
  #       uses: Ilshidur/action-discord@master
  #       env:
  #         DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
  #       with:
  #         args: "Version {{ TAG_NAME }} of {{ EVENT_PAYLOAD.repository.full_name }} has been released!"
